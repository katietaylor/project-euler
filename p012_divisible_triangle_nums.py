"""The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?"""


def find_factors(num):
    n = int(num ** 0.5) + 1
    factors = set()
    while n > 0:
        if num % n == 0:
            factors.add(n)
            factors.add(num / n)
        n -= 1
    return factors


def get_next_triangle_number(nth_triangle):
    nth_numbers = range(1, nth_triangle + 1)
    return sum(nth_numbers)


def get_triangle_number_factors(factor_count=500):

    triangle_nums = []
    nth_triangle = 1

    while True:
        triangle_num = get_next_triangle_number(nth_triangle)
        triangle_nums.append(triangle_num)
        if len(find_factors(triangle_num)) > factor_count:
            return triangle_num
        nth_triangle += 1
