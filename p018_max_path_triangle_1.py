"""
By starting at the top of the triangle below and moving to adjacent numbers on
the row below, the maximum total from top to bottom is 23.

3
7 4
2 4 6
8 5 9 3

That is, 3 + 7 + 4 + 9 = 23.

Find the maximum total from top to bottom of the triangle below:
                       75
                      95 64
                     17 47 82
                    18 35 87 10
                   20 04 82 47 65
                  19 01 23 75 03 34
                 88 02 77 73 07 63 67
                99 65 04 28 06 16 70 92
               41 41 26 56 83 40 80 70 33
              41 48 72 33 47 32 37 16 94 29
             53 71 44 65 25 43 91 52 97 51 14
            70 11 33 28 77 73 17 78 39 68 17 57
           91 71 52 38 17 14 91 43 58 50 27 29 48
          63 66 04 68 89 53 67 30 73 16 69 87 40 31
         04 62 98 27 23 09 70 98 73 93 38 53 60 04 23
"""

pyramid = [[75],  # 0
           [95, 64],  # 1
           [17, 47, 82],  # 2
           [18, 35, 87, 10],  # 3
           [20, 04, 82, 47, 65],  # 4
           [19, 01, 23, 75, 03, 34],  # 5
           [88, 02, 77, 73, 07, 63, 67],  # 6
           [99, 65, 04, 28, 06, 16, 70, 92],  # 7
           [41, 41, 26, 56, 83, 40, 80, 70, 33],  # 8
           [41, 48, 72, 33, 47, 32, 37, 16, 94, 29],  # 9
           [53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14],  # 10
           [70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57],  # 11
           [91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48],  # 12
           [63, 66, 04, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31],  # 13
           [04, 62, 98, 27, 23,  9, 70, 98, 73, 93, 38, 53, 60, 04, 23]]  # 14


def find_max_path_value():
    level = len(pyramid) - 2

    while level >= 0:
        for i in range(len(pyramid[level])):
            pyramid[level][i] += max(
                [pyramid[level + 1][i], pyramid[level + 1][i + 1]])
        level -= 1
    return pyramid[0][0]
