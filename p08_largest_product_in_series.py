"""The four adjacent digits in the 1000-digit number that have the greatest
product are 9 x 9 x 8 x 9 = 5832.


Find the thirteen adjacent digits in the 1000-digit number that have the
greatest product. What is the value of this product?"""

big_number = """7316717653133062491922511967442657474235534919493496983520312\
77450632623957831801698480186947885184385861560789112949495459501737958331952\
85320880551112540698747158523863050715693290963295227443043557668966489504452\
44523161731856403098711121722383113622298934233803081353362766142828064444866\
45238749303589072962904915604407723907138105158593079608667017242712188399879\
79087922749219016997208880937766572733300105336788122023542180975125454059475\
22435258490771167055601360483958644670632441572215539753697817977846174064955\
14929086256932197846862248283972241375657056057490261407972968652414535100474\
82166370484403199890008895243450658541227588666881164271714799244429282308634\
65674813919123162824586178664583591245665294765456828489128831426076900422421\
90226710556263211111093705442175069416589604080719840385096245544436298123098\
78799272442849091888458015616609791913387549920052406368991256071760605886116\
46710940507754100225698315520005593572972571636269561882670428252483600823257\
530420752963450"""

i = 0
j = 13

sequences = []
max_product = 0

while (i + j) <= len(big_number):
    sequence = big_number[i:i+13]
    if "0" in sequence:
        i += 1
        continue
    sequences.append(big_number[i:i+13])
    product = 1
    for num in sequence:
        product *= int(num)
    if product > max_product:
        max_product = product

    i += 1
print max_product